#include "Dealer.hpp"
#include "PokerEnv.hpp"
#include "Exceptions.hpp"
#include "CFR.hpp"

std::vector<Card> loadStringCards(std::string cards) {
    if (cards.size() % 2 != 0) {
        throw InvalidCardEncoding();
    }
    std::vector<Card> result { };
    for (int i = 0; i < cards.size(); i += 2) {
        result.push_back({ cards[0], static_cast<Suits>(cards[1]) });
    }
};

void runCFREntrypoint(
    std::string publicCardsString,
    std::string privateCardsString,
    int betnb,
    int chipsa1,
    bool a1hasplayed,
    bool a2hasplayed,
    int chipsa2,
    bool ourTurn
) {
    std::vector<Card> publicCards = loadStringCards(publicCardsString);
    std::vector<Card> privateCards = loadStringCards(privateCardsString);
    Agent ourself = Agent(privateCards, chipsa1, a1hasplayed);
    Agent opponent = Agent({}, chipsa2, a2hasplayed, true);
    PokerEnv(ourself, opponent, publicCards, betnb, ourTurn);
}