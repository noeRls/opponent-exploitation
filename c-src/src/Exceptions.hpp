#pragma once

#include <exception>
#include <string>

class CustomException : public std::exception
{
    public:
        CustomException(const std::string &error) : msg("[CUSTOM]: " + error) {};
        ~CustomException() = default;
        virtual const char *what() const noexcept
        {
            return msg.c_str();
        }
    protected:
        std::string msg;
};


class InvalidAction : public CustomException
{
    public:
        InvalidAction() : CustomException("Invalid action") {};
        ~InvalidAction() = default;
};

class InvalidAgentCards : public CustomException
{
    public:
        InvalidAgentCards() : CustomException("Invalid agent cards") {};
        ~InvalidAgentCards() = default;
};

class InvalidCardEncoding : public CustomException
{
    public:
        InvalidCardEncoding() : CustomException("Invalid card encoding") {};
        ~InvalidCardEncoding() = default;
};

class GameNotOver : public CustomException
{
    public:
        GameNotOver() : CustomException("Game is not over") {};
        ~GameNotOver() = default;
};