from src.environement.strategys.close_equilibrium import CloseEquilibriumStrategy
from src.environement.strategys.equilibrium import EquilibriumStrategy
from src.train.ea.play_against import play_against
from src.environement.TexasHoldemLimit.TexaxHoldemEnv import TexasHoldemEnv
from src.environement.TexasHoldemLimit.strategy.all_strategy import ALL_TEXAS_HOLDEM_STRATEGY

import unittest


class TestTexasHoldemStrategy(unittest.TestCase):
    def test_all_strategy(self):
        env = TexasHoldemEnv()
        strategy = []
        for S in ALL_TEXAS_HOLDEM_STRATEGY + [CloseEquilibriumStrategy]:
            strategy.append(S())
        for x in range(len(strategy)):
            s1 = strategy[x]
            for y in range(x + 1, len(strategy)):
                s2 = strategy[y]
                play_against(env, s1, s2, nb_games=10)

    # def equilibrium_is_equal(self):
    #     env = TexasHoldemEnv()
    #     result = play_against(env, EquilibriumStrategy(), EquilibriumStrategy(), nb_games=100)
    #     self.assertEqual(result.r1, result.r2)

if __name__ == '__main__':
    unittest.main()
