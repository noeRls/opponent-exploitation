from __future__ import annotations
from src.train.ea.Individual import TrainingIndividual
from src.nn.NNStrategy import NNStrategy
import numpy as np


class NNIndividual(TrainingIndividual):
    startegy: NNStrategy

    def __init__(self, strategy: NNStrategy,
                 values: np.ndarray = None) -> None:
        values_size = strategy.get_weights_size()
        super().__init__(values_size, strategy, values)

    def _on_values_update(self):
        super()._on_values_update()
        self.startegy.set_weights_from_array(self._values)

    def copy(self) -> NNIndividual:
        return NNIndividual(self.startegy.copy(), self._values.copy())
