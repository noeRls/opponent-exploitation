import numpy as np
from tensorflow import keras
from tensorflow.keras import layers
from .NN import NN

class DescisionMakingNN(NN):
    def get_input_size(self):
        game_history_size = self.game_info.available_action_size * self.game_info.player_max_action_per_game * 3
        # *3 -> own action + opponent action + public opponent equilibrium
        return (
            game_history_size +
            self.game_info.available_action_size + # current equilibrium
            self.modelling_size
        )

    def _create_model(self):
        input_size = self.get_input_size()
        self.model = keras.Sequential(
            [layers.Dense(input_size)],
            [layers.Dense(10)],
            [layers.Dense(self.game_info.available_action_size)],
        )