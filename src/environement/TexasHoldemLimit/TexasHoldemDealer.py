from ..Dealer import Dealer
from typing import List
from enum import Enum

class CardSymbol(Enum):
    HEART = 'H'
    DIAMOND = 'D'
    SPADE = 'S'
    CLUBS = 'C'

class CardValue(Enum):
    TWO = 2
    THREE = 3
    FOUR = 4
    FIVE = 5
    SIX = 6
    SEVEN = 7
    EIGHT = 8
    NINE = 9
    TEN = 'T'
    J = 'J'
    Q = 'Q'
    K = 'K'
    A = 'A'

CARD_NAME_LIST="23456789TJQKA"
class FullDeckCard():
    value: CardValue
    def __init__(self, value: CardValue, symbol: CardSymbol):
        self.value = value
        self.symbol = symbol

    def get_rank(self) -> int:
        return CARD_NAME_LIST.index(str(self.value.value))

    def __eq__(self, other):
        if not isinstance(other, FullDeckCard):
            return False
        return self.value == other.value and self.symbol == other.symbol

    def __str__(self) -> str:
        return f'{self.value.value}{self.symbol.value}'
full_deck_cards: List[FullDeckCard] = []

def init_deck():
    for rank in range(14):
        for color in list(CardSymbol):
            full_deck_cards.append(FullDeckCard(rank, color))
init_deck()

class TexasHoldemDealer(Dealer[FullDeckCard]):
    def get_full_deck(self) -> List[FullDeckCard]:
        return full_deck_cards