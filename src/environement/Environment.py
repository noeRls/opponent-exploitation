import numpy as np
from Agent import Agent
import math

class Environment():
    actions_number: int
    max_actions_in_game: int
    game_ended: bool
    __p1_turn: bool
    __p1_start: bool
    agent1: Agent
    agent2: Agent

    def __init__(self):
        self.game_ended = False
        self.__p1_start = True
        self.__p1_turn = True
        self.reset()

    def get_available_actions(self):
        raise NotImplementedError()

    def get_max_action_agent(self):
        return math.ceil(self.max_actions_in_game / 2.0)

    def is_p1_turn(self):
        return self.__p1_turn

    def play(self, action):
        if self.game_ended:
            raise Exception('Game is ended, no action can be played')
        if self.__p1_turn:
            self.agent1.play(action)
        else:
            self.agent2.play(action)
        self.__p1_turn = not self.__p1_turn

    def reset(self):
        self.agent1.reset()
        self.agent2.reset()
        if not self.__p1_start:
            self.agent1.__step += 1

    def next_game(self):
        self.game_ended = False
        self.__p1_start = not self.__p1_start
        self.__p1_turn = self.__p1_start
        self.reset()
