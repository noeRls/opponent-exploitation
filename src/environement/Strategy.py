from .Agent import Agent
from .Environment import Environment
import threading


class Strategy():
    agent: Agent
    env: Environment
    lock: threading.Lock

    def __init__(self) -> None:
        self.lock = threading.Lock()

    def _action_or_default(self, action):
        allowed_action = self.env.get_available_actions()
        if action in allowed_action:
            return action
        else:
            return allowed_action[0]

    def set_agent(self, agent: Agent):
        self.agent = agent

    def get_name(self):
        raise NotImplementedError()

    def get_play(self):
        raise NotImplementedError()

    def on_game_end(self):
        pass

    def reset(self):
        pass

    def set_env(self, env: Environment):
        self.env = env

    def copy(self):
        return self
